{
    "name": "source-equipment",
    "config": {
      "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
      "tasks.max": "1",
      "plugin.name": "wal2json",
      "database.hostname": "olmis-db",
      "database.port": "5432",
      "database.user": "postgres",
      "database.password": "p@ssw0rd",
      "database.dbname": "open_lmis",
      "database.server.name": "openlmis",
      "table.whitelist": "equipment\\.contracts,equipment\\.equipment_catalog_items,equipment\\.equipment_categories,equipment\\.equipment_disciplines,equipment\\.equipment_energy_types,equipment\\.equipment_fund_sources,equipment\\.equipment_inventory,equipment\\.equipment_inventory_items,equipment\\.equipment_maintenance_request_reasons,equipment\\.equipment_maintenance_requests,equipment\\.equipment_models,equipment\\.equipment_operation_modes,equipment\\.equipment_orderables,equipment\\.equipment_service_logs,equipment\\.equipment_test_types,equipment\\.equipment_type_programs,equipment\\.equipment_types,equipment\\.equipments,equipment\\.reasons_not_functional,equipment\\.service_types,equipment\\.vendor",
      "database.history.kafka.bootstrap.servers": "kafka:29092",
      "database.history.kafka.topic": "openlmis",
      "slot.name": "dbz_equipment",
      "heartbeat.interval.ms": 30000,
      "heartbeat.action.query": "CREATE TABLE IF NOT EXISTS debezium_heartbeat (id SERIAL PRIMARY KEY, ts TIMESTAMPTZ); INSERT INTO debezium_heartbeat (id, ts) VALUES (1, NOW()) ON CONFLICT(id) DO UPDATE SET ts=NOW();",
      "transforms": "unwrap,route",
      "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
      "transforms.unwrap.drop.tombstones": "false",
      "transforms.unwrap.delete.handling.mode": "none",
      "transforms.route.type": "org.apache.kafka.connect.transforms.RegexRouter",
      "transforms.route.regex": "([^.]+)\\.([^.]+)\\.([^.]+)",
      "transforms.route.replacement": "public.kafka_$3",
      "max.batch.size": "1024",
      "max.queue.size": "4096",
      "topic.creation.default.compression.type": "snappy",
      "topic.creation.default.replication.factor": 1,
      "topic.creation.default.partitions": 1
    }
  }
  